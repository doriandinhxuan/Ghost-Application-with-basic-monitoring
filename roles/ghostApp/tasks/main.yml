
#############################################################################
###                          Containerized Application                    ### 
#############################################################################

- name: Installation multiple packages
  yum:
    name: net-tools
    state: present

- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-common
      - docker-engine
    state: absent

- name: Installing Docker Prerequisite packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
     - yum-utils
     - device-mapper-persistent-data
     - lvm2
     - unzip
     - git
     - mariadb-server.x86_64

- name: Configuring docker-ce repo
  get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
      mode: 0644

- name: Installing Docker latest version
  yum:
    name: docker-ce
    state: present

- name: Add user vagrant to docker group
  user:
    name: vagrant
    groups: docker
    append: yes
  become: yes

- name: Starting and Enabling Docker service
  service:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes

- name: Ensure Pip is installed.
  become: yes
  command: 'curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py" '

- name: Install pip
  become: yes
  command: 'python get-pip.py'

- name: Install docker-compose
  pip:
    name: docker-compose
    state: present

- name: Creating ghost directory
  file:
    owner: vagrant
    group: vagrant
    path: /home/vagrant/ghost
    state: directory
    mode: 0755

- name: Copy files
  copy:
    owner: vagrant
    group: vagrant
    src: "{{ item }}"
    dest: /home/vagrant/ghost/
    mode: 0755
  with_items:
    - config.production.json
    - docker-compose.yml
    - migrations-db.sh

- name: Pull an google/cadvisor image
  docker_image:
    name: google/cadvisor:latest

- name: Set up permission
  become_user: root
  command: "chown -R 1000:1000 /home/vagrant/ghost/config.production.json"

- name: Run/restart docker-compose
  docker_service: 
    files:
    - "docker-compose.yml"
    project_src: "/home/vagrant/ghost/"
    project_name: "ghostApp"
    state: present
    restarted: yes

- name: Ensure group "node_exporter" exists
  group:
    name: node_exporter
    state: present

- name: Add the user 'node_exporter' with a bash shell
  user:
    name: node_exporter
    shell: /bin/bash
    groups: node_exporter
    append: yes

- name: Download node_exporter
  get_url:
    url: https://github.com/prometheus/node_exporter/releases/download/v0.17.0/node_exporter-0.17.0.linux-amd64.tar.gz
    dest: /opt/
    owner: node_exporter
    group: node_exporter
    mode: 0775

- name: Extract node_exporter-0.17.0.linux-amd64.tar.gz into /opt/
  unarchive:
    src: /opt/node_exporter-0.17.0.linux-amd64.tar.gz
    dest: /opt/
    owner: node_exporter
    group: node_exporter
    remote_src: yes 

- name: Change name of directory 'node_exporter'
  command: mv /opt/node_exporter-0.17.0.linux-amd64 /opt/node_exporter 

- name: Creating node_exporter.service
  file:
    path: /etc/systemd/system/node_exporter.service
    state: touch
    mode: 0775

- name: Add configuration to /etc/systemd/system/node_exporter.service
  blockinfile:
    dest: /etc/systemd/system/node_exporter.service
    insertafter: EOF
    content: |
      [Unit]
      Description=Node Exporter
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=node_exporter
      ExecStart=/opt/node_exporter/node_exporter

      [Install]
      WantedBy=default.target

- name: Starting services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
    daemon_reload: yes
  with_items:
    - 'node_exporter'







